@startuml

title __FINALPROJECT's Class Diagram__\n

  namespace a {
    namespace om.example.finalproject {
      class com.example.finalproject.HelloApplication {
          {static} - window : Stage
          + getStage()
          {static} + main()
          + start()
      }
    }
  }
  

  namespace a {
    namespace om.example.finalproject {
      class com.example.finalproject.HelloController {
          - loadBST()
          - loadLinkedList()
          - loadQueue()
          - loadStack()
      }
    }
  }
  

  namespace  a {
    namespace om.example.finalproject {
      class com.example.finalproject.LinkedListController {
          - bool : boolean
          - height : int
          - linkedList : LinkedList<String>
          - nodeText : TextField
          - pane : Pane
          - prompt : Text
          - width : int
          - addBetween()
          - addChildren()
          - addEnd()
          - addHead()
          - clearAtStart()
          - clearPane()
          - deleteBetween()
          - deleteEnd()
          - deleteHead()
          - displayList()
          - getMiddleString()
          - loadFirstPage()
          - loopClear()
      }
    }
  }
  

  namespace a  {
    namespace om.example.finalproject {
      class com.example.finalproject.Main {
          {static} + main()
      }
    }
  }
  

  namespace a  {
    namespace om.example.finalproject {
      class com.example.finalproject.QueueController {
          - inputField : TextField
          - queue : Queue<String>
          - queuePane : HBox
          + dequeue()
          + enqueue()
          + printFront()
          - loadFirstPage()
      }
    }
  }
  

  namespace a  {
    namespace om.example.finalproject {
      class com.example.finalproject.StackController {
          - height : int
          - nodeText : TextField
          - pane : Pane
          - prompt : Text
          - stack : Stack<String>
          - addToStack()
          - loadFirstPage()
          - pop()
          - push()
          - top()
      }
    }
  }
  

  namespace a  {
    namespace om.example.finalproject {
      class com.example.finalproject.TreeController {
          - circlePane : Pane
          - nodeText : TextField
          - prompt : Text
          - vGap : double
          + TreeController()
          + delete()
          + displayTree()
          + insert()
          + searchNodeLoop()
          # displayTree()
          - addCircle()
          - deleteCircle()
          - deleteNode()
          - insertRec()
          - loadFirstPage()
          - searchNodeCall()
      }
    }
  }
  

  namespace a  {
    namespace om.example.finalproject {
      class com.example.finalproject.TreeController.TreeNode {
          - data : int
          + TreeNode()
      }
    }
  }
  

  com.example.finalproject.HelloApplication -up-|> javafx.application.Application
  com.example.finalproject.TreeController o-- com.example.finalproject.TreeController.TreeNode : root
  com.example.finalproject.TreeController +-down- com.example.finalproject.TreeController.TreeNode
  com.example.finalproject.TreeController.TreeNode o-- com.example.finalproject.TreeController.TreeNode : left
  com.example.finalproject.TreeController.TreeNode o-- com.example.finalproject.TreeController.TreeNode : right


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
